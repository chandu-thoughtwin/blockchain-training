{"ast":null,"code":"var _jsxFileName = \"/home/dell/Desktop/BlockChain/Ethereum/ThoughtwinCoin/thoughtwin-coin-front-end/src/Component/thoughtwin-contract/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ContractAbi from '../../smart-contracts/build/contracts/ThoughtwinCoin.json';\nimport Web3 from 'web3';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ThoughtWinContract = () => {\n  _s();\n\n  const [balance, setBalance] = useState(0);\n  const [account, setAccount] = useState('');\n  const web3Contract = new Web3(Web3.givenProvider || 'localhost:8545');\n  const contract = new web3Contract.eth.Contract(ContractAbi.abi, '0xAd09cA83A8fA444E429337a6B14E84C5130FC48f'); // const getEvents = async () => {\n  //   const balance = await contract.methods.name().call()\n  //   console.log(balance)\n  //   const receipt = await contract.events.Transfer(\n  //     {\n  //       fromBlock: 0,\n  //       toBlock: 'latest',\n  //     },\n  //     function (error, events) {\n  //       console.log(events)\n  //     },\n  //   )\n  //   console.log(receipt)\n  // }\n\n  const getBalance = async () => {\n    let acc = await web3Contract.eth.getAccounts();\n    setAccount(accs);\n    const balance_ = await contract.methods.balanceOf(acc[0]).call();\n    setBalance(balance_);\n    const format = web3Contract.utils.fromWei(_balance);\n    console.log(format);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getBalance,\n      children: \"getBalance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ThoughtWinContract, \"ukJIvc2Pmged3a44asza24UZaZ4=\");\n\n_c = ThoughtWinContract;\nexport default ThoughtWinContract;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThoughtWinContract\");","map":{"version":3,"sources":["/home/dell/Desktop/BlockChain/Ethereum/ThoughtwinCoin/thoughtwin-coin-front-end/src/Component/thoughtwin-contract/index.js"],"names":["React","ContractAbi","Web3","useState","ThoughtWinContract","balance","setBalance","account","setAccount","web3Contract","givenProvider","contract","eth","Contract","abi","getBalance","acc","getAccounts","accs","balance_","methods","balanceOf","call","format","utils","fromWei","_balance","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,2DAAxB;AAEA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AACA,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMM,YAAY,GAAG,IAAIP,IAAJ,CAASA,IAAI,CAACQ,aAAL,IAAsB,gBAA/B,CAArB;AACA,QAAMC,QAAQ,GAAG,IAAIF,YAAY,CAACG,GAAb,CAAiBC,QAArB,CACfZ,WAAW,CAACa,GADG,EAEf,4CAFe,CAAjB,CAJ+B,CAS/B;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMC,UAAU,GAAG,YAAY;AAC7B,QAAIC,GAAG,GAAG,MAAMP,YAAY,CAACG,GAAb,CAAiBK,WAAjB,EAAhB;AAEAT,IAAAA,UAAU,CAACU,IAAD,CAAV;AACA,UAAMC,QAAQ,GAAG,MAAMR,QAAQ,CAACS,OAAT,CAAiBC,SAAjB,CAA2BL,GAAG,CAAC,CAAD,CAA9B,EAAmCM,IAAnC,EAAvB;AACAhB,IAAAA,UAAU,CAACa,QAAD,CAAV;AACA,UAAMI,MAAM,GAAGd,YAAY,CAACe,KAAb,CAAmBC,OAAnB,CAA2BC,QAA3B,CAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACD,GARD;;AASA,sBACE;AAAA,2BACE;AAAQ,MAAA,OAAO,EAAER,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAxCD;;GAAMX,kB;;KAAAA,kB;AAyCN,eAAeA,kBAAf","sourcesContent":["import React from 'react'\nimport ContractAbi from '../../smart-contracts/build/contracts/ThoughtwinCoin.json'\n\nimport Web3 from 'web3'\nimport { useState } from 'react'\nconst ThoughtWinContract = () => {\n  const [balance, setBalance] = useState(0)\n  const [account, setAccount] = useState('')\n  const web3Contract = new Web3(Web3.givenProvider || 'localhost:8545')\n  const contract = new web3Contract.eth.Contract(\n    ContractAbi.abi,\n    '0xAd09cA83A8fA444E429337a6B14E84C5130FC48f',\n  )\n\n  // const getEvents = async () => {\n  //   const balance = await contract.methods.name().call()\n  //   console.log(balance)\n\n  //   const receipt = await contract.events.Transfer(\n  //     {\n  //       fromBlock: 0,\n  //       toBlock: 'latest',\n  //     },\n\n  //     function (error, events) {\n  //       console.log(events)\n  //     },\n  //   )\n  //   console.log(receipt)\n  // }\n\n  const getBalance = async () => {\n    let acc = await web3Contract.eth.getAccounts()\n\n    setAccount(accs)\n    const balance_ = await contract.methods.balanceOf(acc[0]).call()\n    setBalance(balance_)\n    const format = web3Contract.utils.fromWei(_balance)\n    console.log(format)\n  }\n  return (\n    <div>\n      <button onClick={getBalance}>getBalance</button>\n    </div>\n  )\n}\nexport default ThoughtWinContract\n"]},"metadata":{},"sourceType":"module"}