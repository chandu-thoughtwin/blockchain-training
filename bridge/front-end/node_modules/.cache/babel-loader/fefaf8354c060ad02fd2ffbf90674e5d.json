{"ast":null,"code":"import _regeneratorRuntime from \"/home/dell/Desktop/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/dell/Desktop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/dell/Desktop/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/dell/Desktop/BlockChain/bridge/front-end/src/Components/Transfer.js\";\n\nimport { useState } from 'react';\nimport { BigNumber } from 'bignumber.js';\nimport Bridge from '../contracts/Bridge.json';\nimport { Connect } from './Connect';\nimport { Withdraw } from './Withdraw';\nimport Web3 from 'web3';\nexport var Transfer = function Transfer(props) {\n  //   const connect = Connect.web3Connect()\n  //   const withdraw = Withdraw()\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      nonce = _useState2[0],\n      setNonce = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      messageHash = _useState4[0],\n      setMessageHash = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      v = _useState6[0],\n      setV = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      r = _useState8[0],\n      setR = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      s = _useState10[0],\n      setS = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      amount = _useState12[0],\n      setAmount = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      input = _useState14[0],\n      setInput = _useState14[1];\n\n  var _useState15 = useState(),\n      _useState16 = _slicedToArray(_useState15, 2),\n      tran_account = _useState16[0],\n      setTran_Account = _useState16[1];\n\n  var _useState17 = useState(),\n      _useState18 = _slicedToArray(_useState17, 2),\n      network = _useState18[0],\n      setNetwork = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      loadings = _useState20[0],\n      setLoading = _useState20[1]; // const [account, setAccounts] = useState()\n\n\n  var bridgeAbi = Bridge.abi; //   const web3 = connect.web3\n\n  var web3 = new Web3(Web3.givenProvider || 'localhost:8545');\n  var bridgeContractEth = new web3.eth.Contract(bridgeAbi, '0x93C11Ea795519DD09175DA5a23f64b32a37Eff2E'); // const bridgeContractBsc = new web3.eth.Contract(\n  //   bridgeAbi,\n  //   '0x1d6E5AD248dbdaEDd51C284b3Bd011e722126a4B',\n  // )\n\n  var handleChange = function handleChange(e) {\n    setAmount(e.target.value);\n  };\n\n  var handleNetwork = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _network;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return web3.eth.net.getNetworkType();\n\n            case 2:\n              _network = _context.sent;\n              setNetwork(_network);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleNetwork(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var code = process.env.REACT_APP_CODE;\n\n  var transferToken = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e) {\n      var accounts;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              e.preventDefault();\n              _context3.prev = 1;\n              _context3.next = 4;\n              return web3.eth.getAccounts();\n\n            case 4:\n              accounts = _context3.sent;\n              setTran_Account(accounts[0]);\n              _context3.next = 8;\n              return Connect.onClickConnect;\n\n            case 8:\n              if (!(network !== 'rinkeby')) {\n                _context3.next = 18;\n                break;\n              }\n\n              // setNetwork(undefined)\n              setLoading(true);\n              _context3.next = 12;\n              return bridgeContractEth.methods.transferToken(new BigNumber(amount * Math.pow(10, 18))).send({\n                from: accounts[0]\n              }).then( /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(response) {\n                  var nonce, amount, sender, data_to_sign, signature;\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          nonce = response.events.transfer.returnValues.nonce;\n                          setNonce(nonce);\n                          amount = response.events.transfer.returnValues.amount;\n                          sender = response.events.transfer.returnValues.sender;\n                          data_to_sign = nonce + amount + sender;\n                          signature = web3.eth.accounts.sign(data_to_sign, code);\n                          setMessageHash(signature['messageHash']);\n                          setV(signature['v']);\n                          setR(signature['r']);\n                          setS(signature['s']);\n                          console.log('Invoke Verifier.verify() with the following arguments:');\n                          console.log('messageHash: ' + signature['messageHash']);\n                          console.log('v          : ' + signature['v']);\n                          console.log('r          : ' + signature['r']);\n                          console.log('s          : ' + signature['s']);\n\n                        case 15:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                }));\n\n                return function (_x3) {\n                  return _ref3.apply(this, arguments);\n                };\n              }());\n\n            case 12:\n              _context3.next = 14;\n              return handleNetwork();\n\n            case 14:\n              setInput(true);\n              setLoading(false);\n              _context3.next = 19;\n              break;\n\n            case 18:\n              console.log('please change network type to withdraw token on other chain ');\n\n            case 19:\n              _context3.next = 24;\n              break;\n\n            case 21:\n              _context3.prev = 21;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.log(_context3.t0);\n\n            case 24:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 21]]);\n    }));\n\n    return function transferToken(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var data = {\n    nonce: nonce,\n    messageHash: messageHash,\n    v: v,\n    r: r,\n    s: s,\n    amount: amount,\n    input: input,\n    network: network,\n    loadings: loadings,\n    setLoading: setLoading,\n    tran_account: tran_account\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, !input ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mt-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"amount-id\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    name: \"\",\n    id: \"amount-id\",\n    \"aria-describedby\": \"helpId\",\n    placeholder: \"\" // value={amount}\n    ,\n    onChange: handleChange,\n    disabled: input,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: transferToken,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, loadings ? /*#__PURE__*/React.createElement(\"svg\", {\n    width: \"135\",\n    height: \"135\",\n    viewBox: \"0 0 135 135\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"#fff\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M67.447 58c5.523 0 10-4.477 10-10s-4.477-10-10-10-10 4.477-10 10 4.477 10 10 10zm9.448 9.447c0 5.523 4.477 10 10 10 5.522 0 10-4.477 10-10s-4.478-10-10-10c-5.523 0-10 4.477-10 10zm-9.448 9.448c-5.523 0-10 4.477-10 10 0 5.522 4.477 10 10 10s10-4.478 10-10c0-5.523-4.477-10-10-10zM58 67.447c0-5.523-4.477-10-10-10s-10 4.477-10 10 4.477 10 10 10 10-4.477 10-10z\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"animateTransform\", {\n    attributeName: \"transform\",\n    type: \"rotate\",\n    from: \"0 67 67\",\n    to: \"-360 67 67\",\n    dur: \"2.5s\",\n    repeatCount: \"indefinite\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M28.19 40.31c6.627 0 12-5.374 12-12 0-6.628-5.373-12-12-12-6.628 0-12 5.372-12 12 0 6.626 5.372 12 12 12zm30.72-19.825c4.686 4.687 12.284 4.687 16.97 0 4.686-4.686 4.686-12.284 0-16.97-4.686-4.687-12.284-4.687-16.97 0-4.687 4.686-4.687 12.284 0 16.97zm35.74 7.705c0 6.627 5.37 12 12 12 6.626 0 12-5.373 12-12 0-6.628-5.374-12-12-12-6.63 0-12 5.372-12 12zm19.822 30.72c-4.686 4.686-4.686 12.284 0 16.97 4.687 4.686 12.285 4.686 16.97 0 4.687-4.686 4.687-12.284 0-16.97-4.685-4.687-12.283-4.687-16.97 0zm-7.704 35.74c-6.627 0-12 5.37-12 12 0 6.626 5.373 12 12 12s12-5.374 12-12c0-6.63-5.373-12-12-12zm-30.72 19.822c-4.686-4.686-12.284-4.686-16.97 0-4.686 4.687-4.686 12.285 0 16.97 4.686 4.687 12.284 4.687 16.97 0 4.687-4.685 4.687-12.283 0-16.97zm-35.74-7.704c0-6.627-5.372-12-12-12-6.626 0-12 5.373-12 12s5.374 12 12 12c6.628 0 12-5.373 12-12zm-19.823-30.72c4.687-4.686 4.687-12.284 0-16.97-4.686-4.686-12.284-4.686-16.97 0-4.687 4.686-4.687 12.284 0 16.97 4.686 4.687 12.284 4.687 16.97 0z\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"animateTransform\", {\n    attributeName: \"transform\",\n    type: \"rotate\",\n    from: \"0 67 67\",\n    to: \"360 67 67\",\n    dur: \"8s\",\n    repeatCount: \"indefinite\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 23\n    }\n  }))) : 'transferToken')))) : /*#__PURE__*/React.createElement(Withdraw, {\n    data: data,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }));\n}; // export async function addNetwork(id) {\n//     let networkData;\n//     switch (id) {\n//       //bsctestnet\n//       case 97:\n//         networkData = [\n//           {\n//             chainId: \"0x61\",\n//             chainName: \"BSCTESTNET\",\n//             rpcUrls: [\"https://data-seed-prebsc-1-s1.binance.org:8545\"],\n//             nativeCurrency: {\n//               name: \"BINANCE COIN\",\n//               symbol: \"BNB\",\n//               decimals: 18,\n//             },\n//             blockExplorerUrls: [\"https://testnet.bscscan.com/\"],\n//           },\n//         ];\n//         break;\n//       //bscmainet\n//       case 56:\n//         networkData = [\n//           {\n//             chainId: \"0x38\",\n//             chainName: \"BSCMAINET\",\n//             rpcUrls: [\"https://bsc-dataseed1.binance.org\"],\n//             nativeCurrency: {\n//               name: \"BINANCE COIN\",\n//               symbol: \"BNB\",\n//               decimals: 18,\n//             },\n//             blockExplorerUrls: [\"https://testnet.bscscan.com/\"],\n//           },\n//         ];\n//         break;\n//       default:\n//         break;\n//     }\n//     // agregar red o cambiar red\n//     return window.ethereum.request({\n//       method: \"wallet_addEthereumChain\",\n//       params: networkData,\n//     });\n//   }","map":{"version":3,"sources":["/home/dell/Desktop/BlockChain/bridge/front-end/src/Components/Transfer.js"],"names":["useState","BigNumber","Bridge","Connect","Withdraw","Web3","Transfer","props","nonce","setNonce","messageHash","setMessageHash","v","setV","r","setR","s","setS","amount","setAmount","input","setInput","tran_account","setTran_Account","network","setNetwork","loadings","setLoading","bridgeAbi","abi","web3","givenProvider","bridgeContractEth","eth","Contract","handleChange","e","target","value","handleNetwork","net","getNetworkType","_network","code","process","env","REACT_APP_CODE","transferToken","preventDefault","getAccounts","accounts","onClickConnect","methods","send","from","then","response","events","transfer","returnValues","sender","data_to_sign","signature","sign","console","log","data"],"mappings":";;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AACjC;AACA;AAFiC,kBAGPP,QAAQ,EAHD;AAAA;AAAA,MAG1BQ,KAH0B;AAAA,MAGnBC,QAHmB;;AAAA,mBAIKT,QAAQ,EAJb;AAAA;AAAA,MAI1BU,WAJ0B;AAAA,MAIbC,cAJa;;AAAA,mBAKfX,QAAQ,EALO;AAAA;AAAA,MAK1BY,CAL0B;AAAA,MAKvBC,IALuB;;AAAA,mBAMfb,QAAQ,EANO;AAAA;AAAA,MAM1Bc,CAN0B;AAAA,MAMvBC,IANuB;;AAAA,mBAOff,QAAQ,EAPO;AAAA;AAAA,MAO1BgB,CAP0B;AAAA,MAOvBC,IAPuB;;AAAA,oBAQLjB,QAAQ,CAAC,CAAD,CARH;AAAA;AAAA,MAQ1BkB,MAR0B;AAAA,MAQlBC,SARkB;;AAAA,oBASPnB,QAAQ,CAAC,KAAD,CATD;AAAA;AAAA,MAS1BoB,KAT0B;AAAA,MASnBC,QATmB;;AAAA,oBAUOrB,QAAQ,EAVf;AAAA;AAAA,MAU1BsB,YAV0B;AAAA,MAUZC,eAVY;;AAAA,oBAYHvB,QAAQ,EAZL;AAAA;AAAA,MAY1BwB,OAZ0B;AAAA,MAYjBC,UAZiB;;AAAA,oBAaFzB,QAAQ,CAAC,KAAD,CAbN;AAAA;AAAA,MAa1B0B,QAb0B;AAAA,MAahBC,UAbgB,mBAcjC;;;AAEA,MAAMC,SAAS,GAAG1B,MAAM,CAAC2B,GAAzB,CAhBiC,CAiBjC;;AACA,MAAMC,IAAI,GAAG,IAAIzB,IAAJ,CAASA,IAAI,CAAC0B,aAAL,IAAsB,gBAA/B,CAAb;AAEA,MAAMC,iBAAiB,GAAG,IAAIF,IAAI,CAACG,GAAL,CAASC,QAAb,CACxBN,SADwB,EAExB,4CAFwB,CAA1B,CApBiC,CAwBjC;AACA;AACA;AACA;;AACA,MAAMO,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAO;AAC1BjB,IAAAA,SAAS,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD,GAFD;;AAGA,MAAMC,aAAa;AAAA,wEAAG,iBAAOH,CAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACCN,IAAI,CAACG,GAAL,CAASO,GAAT,CAAaC,cAAb,EADD;;AAAA;AAChBC,cAAAA,QADgB;AAEpBjB,cAAAA,UAAU,CAACiB,QAAD,CAAV;;AAFoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbH,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAKA,MAAMI,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,cAAzB;;AAEA,MAAMC,aAAa;AAAA,yEAAG,kBAAOX,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACpBA,cAAAA,CAAC,CAACY,cAAF;AADoB;AAAA;AAAA,qBAIKlB,IAAI,CAACG,GAAL,CAASgB,WAAT,EAJL;;AAAA;AAIZC,cAAAA,QAJY;AAKlB3B,cAAAA,eAAe,CAAC2B,QAAQ,CAAC,CAAD,CAAT,CAAf;AALkB;AAAA,qBAMZ/C,OAAO,CAACgD,cANI;;AAAA;AAAA,oBAOd3B,OAAO,KAAK,SAPE;AAAA;AAAA;AAAA;;AAQhB;AACAG,cAAAA,UAAU,CAAC,IAAD,CAAV;AATgB;AAAA,qBAUVK,iBAAiB,CAACoB,OAAlB,CACHL,aADG,CACW,IAAI9C,SAAJ,CAAciB,MAAM,YAAG,EAAH,EAAS,EAAT,CAApB,CADX,EAEHmC,IAFG,CAEE;AAAEC,gBAAAA,IAAI,EAAEJ,QAAQ,CAAC,CAAD;AAAhB,eAFF,EAGHK,IAHG;AAAA,qFAGE,kBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACAhD,0BAAAA,KADA,GACQgD,QAAQ,CAACC,MAAT,CAAgBC,QAAhB,CAAyBC,YAAzB,CAAsCnD,KAD9C;AAEJC,0BAAAA,QAAQ,CAACD,KAAD,CAAR;AACIU,0BAAAA,MAHA,GAGSsC,QAAQ,CAACC,MAAT,CAAgBC,QAAhB,CAAyBC,YAAzB,CAAsCzC,MAH/C;AAIA0C,0BAAAA,MAJA,GAISJ,QAAQ,CAACC,MAAT,CAAgBC,QAAhB,CAAyBC,YAAzB,CAAsCC,MAJ/C;AAMAC,0BAAAA,YANA,GAMerD,KAAK,GAAGU,MAAR,GAAiB0C,MANhC;AAOAE,0BAAAA,SAPA,GAOYhC,IAAI,CAACG,GAAL,CAASiB,QAAT,CAAkBa,IAAlB,CAAuBF,YAAvB,EAAqClB,IAArC,CAPZ;AAQJhC,0BAAAA,cAAc,CAACmD,SAAS,CAAC,aAAD,CAAV,CAAd;AACAjD,0BAAAA,IAAI,CAACiD,SAAS,CAAC,GAAD,CAAV,CAAJ;AACA/C,0BAAAA,IAAI,CAAC+C,SAAS,CAAC,GAAD,CAAV,CAAJ;AACA7C,0BAAAA,IAAI,CAAC6C,SAAS,CAAC,GAAD,CAAV,CAAJ;AAEAE,0BAAAA,OAAO,CAACC,GAAR,CACE,wDADF;AAGAD,0BAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBH,SAAS,CAAC,aAAD,CAAvC;AACAE,0BAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBH,SAAS,CAAC,GAAD,CAAvC;AACAE,0BAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBH,SAAS,CAAC,GAAD,CAAvC;AACAE,0BAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBH,SAAS,CAAC,GAAD,CAAvC;;AAnBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF;;AAAA;AAAA;AAAA;AAAA,kBAVU;;AAAA;AAAA;AAAA,qBAoCVvB,aAAa,EApCH;;AAAA;AAsChBlB,cAAAA,QAAQ,CAAC,IAAD,CAAR;AACAM,cAAAA,UAAU,CAAC,KAAD,CAAV;AAvCgB;AAAA;;AAAA;AAyChBqC,cAAAA,OAAO,CAACC,GAAR,CACE,8DADF;;AAzCgB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAiDlBD,cAAAA,OAAO,CAACC,GAAR;;AAjDkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAblB,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAoDA,MAAMmB,IAAI,GAAG;AACX1D,IAAAA,KAAK,EAAEA,KADI;AAEXE,IAAAA,WAAW,EAAEA,WAFF;AAGXE,IAAAA,CAAC,EAAEA,CAHQ;AAIXE,IAAAA,CAAC,EAAEA,CAJQ;AAKXE,IAAAA,CAAC,EAAEA,CALQ;AAMXE,IAAAA,MAAM,EAAEA,MANG;AAOXE,IAAAA,KAAK,EAAEA,KAPI;AAQXI,IAAAA,OAAO,EAAEA,OARE;AASXE,IAAAA,QAAQ,EAAEA,QATC;AAUXC,IAAAA,UAAU,EAAEA,UAVD;AAWXL,IAAAA,YAAY,EAAEA;AAXH,GAAb;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACF,KAAD,gBACC;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,IAAI,EAAC,EAHP;AAIE,IAAA,EAAE,EAAC,WAJL;AAKE,wBAAiB,QALnB;AAME,IAAA,WAAW,EAAC,EANd,CAOE;AAPF;AAQE,IAAA,QAAQ,EAAEe,YARZ;AASE,IAAA,QAAQ,EAAEf,KATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eAgBE;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAoC,IAAA,OAAO,EAAE2B,aAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrB,QAAQ,gBACP;AACE,IAAA,KAAK,EAAC,KADR;AAEE,IAAA,MAAM,EAAC,KAFT;AAGE,IAAA,OAAO,EAAC,aAHV;AAIE,IAAA,KAAK,EAAC,4BAJR;AAKE,IAAA,IAAI,EAAC,MALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAM,IAAA,CAAC,EAAC,wWAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,aAAa,EAAC,WADhB;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,IAAI,EAAC,SAHP;AAIE,IAAA,EAAE,EAAC,YAJL;AAKE,IAAA,GAAG,EAAC,MALN;AAME,IAAA,WAAW,EAAC,YANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,eAiBE;AAAM,IAAA,CAAC,EAAC,i+BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,aAAa,EAAC,WADhB;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,IAAI,EAAC,SAHP;AAIE,IAAA,EAAE,EAAC,WAJL;AAKE,IAAA,GAAG,EAAC,IALN;AAME,IAAA,WAAW,EAAC,YANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAjBF,CADO,GA8BP,eA/BJ,CAhBF,CADF,CADF,CADD,gBAyDC,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEwC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1DJ,CADF;AA+DD,CAvKM,C,CAyKP;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA","sourcesContent":["import { useState } from 'react'\nimport { BigNumber } from 'bignumber.js'\nimport Bridge from '../contracts/Bridge.json'\nimport { Connect } from './Connect'\nimport { Withdraw } from './Withdraw'\nimport Web3 from 'web3'\n\nexport const Transfer = (props) => {\n  //   const connect = Connect.web3Connect()\n  //   const withdraw = Withdraw()\n  const [nonce, setNonce] = useState()\n  const [messageHash, setMessageHash] = useState()\n  const [v, setV] = useState()\n  const [r, setR] = useState()\n  const [s, setS] = useState()\n  const [amount, setAmount] = useState(0)\n  const [input, setInput] = useState(false)\n  const [tran_account, setTran_Account] = useState()\n\n  const [network, setNetwork] = useState()\n  const [loadings, setLoading] = useState(false)\n  // const [account, setAccounts] = useState()\n\n  const bridgeAbi = Bridge.abi\n  //   const web3 = connect.web3\n  const web3 = new Web3(Web3.givenProvider || 'localhost:8545')\n\n  const bridgeContractEth = new web3.eth.Contract(\n    bridgeAbi,\n    '0x93C11Ea795519DD09175DA5a23f64b32a37Eff2E',\n  )\n  // const bridgeContractBsc = new web3.eth.Contract(\n  //   bridgeAbi,\n  //   '0x1d6E5AD248dbdaEDd51C284b3Bd011e722126a4B',\n  // )\n  const handleChange = (e) => {\n    setAmount(e.target.value)\n  }\n  const handleNetwork = async (e) => {\n    let _network = await web3.eth.net.getNetworkType()\n    setNetwork(_network)\n  }\n\n  const code = process.env.REACT_APP_CODE\n\n  const transferToken = async (e) => {\n    e.preventDefault()\n\n    try {\n      const accounts = await web3.eth.getAccounts()\n      setTran_Account(accounts[0])\n      await Connect.onClickConnect\n      if (network !== 'rinkeby') {\n        // setNetwork(undefined)\n        setLoading(true)\n        await bridgeContractEth.methods\n          .transferToken(new BigNumber(amount * 10 ** 18))\n          .send({ from: accounts[0] })\n          .then(async (response) => {\n            let nonce = response.events.transfer.returnValues.nonce\n            setNonce(nonce)\n            let amount = response.events.transfer.returnValues.amount\n            let sender = response.events.transfer.returnValues.sender\n\n            let data_to_sign = nonce + amount + sender\n            let signature = web3.eth.accounts.sign(data_to_sign, code)\n            setMessageHash(signature['messageHash'])\n            setV(signature['v'])\n            setR(signature['r'])\n            setS(signature['s'])\n\n            console.log(\n              'Invoke Verifier.verify() with the following arguments:',\n            )\n            console.log('messageHash: ' + signature['messageHash'])\n            console.log('v          : ' + signature['v'])\n            console.log('r          : ' + signature['r'])\n            console.log('s          : ' + signature['s'])\n          })\n        // const _network = await web3.eth.net.getNetworkType()\n        // setNetwork(_network)\n        await handleNetwork()\n\n        setInput(true)\n        setLoading(false)\n      } else {\n        console.log(\n          'please change network type to withdraw token on other chain ',\n        )\n      }\n\n      // await getTransferEvent()\n      // console.log('xfvgfvfvbfv', results.events.transfer.returnValues)\n    } catch (e) {\n      console.log(e)\n    }\n  }\n  const data = {\n    nonce: nonce,\n    messageHash: messageHash,\n    v: v,\n    r: r,\n    s: s,\n    amount: amount,\n    input: input,\n    network: network,\n    loadings: loadings,\n    setLoading: setLoading,\n    tran_account: tran_account,\n  }\n\n  return (\n    <div className=\"container\">\n      {!input ? (\n        <div className=\"row mt-4\">\n          <div className=\"col-8\">\n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"amount-id\">Amount</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"\"\n                  id=\"amount-id\"\n                  aria-describedby=\"helpId\"\n                  placeholder=\"\"\n                  // value={amount}\n                  onChange={handleChange}\n                  disabled={input}\n                />\n              </div>\n\n              <button className=\"btn btn-primary\" onClick={transferToken}>\n                {loadings ? (\n                  <svg\n                    width=\"135\"\n                    height=\"135\"\n                    viewBox=\"0 0 135 135\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"#fff\"\n                  >\n                    <path d=\"M67.447 58c5.523 0 10-4.477 10-10s-4.477-10-10-10-10 4.477-10 10 4.477 10 10 10zm9.448 9.447c0 5.523 4.477 10 10 10 5.522 0 10-4.477 10-10s-4.478-10-10-10c-5.523 0-10 4.477-10 10zm-9.448 9.448c-5.523 0-10 4.477-10 10 0 5.522 4.477 10 10 10s10-4.478 10-10c0-5.523-4.477-10-10-10zM58 67.447c0-5.523-4.477-10-10-10s-10 4.477-10 10 4.477 10 10 10 10-4.477 10-10z\">\n                      <animateTransform\n                        attributeName=\"transform\"\n                        type=\"rotate\"\n                        from=\"0 67 67\"\n                        to=\"-360 67 67\"\n                        dur=\"2.5s\"\n                        repeatCount=\"indefinite\"\n                      />\n                    </path>\n                    <path d=\"M28.19 40.31c6.627 0 12-5.374 12-12 0-6.628-5.373-12-12-12-6.628 0-12 5.372-12 12 0 6.626 5.372 12 12 12zm30.72-19.825c4.686 4.687 12.284 4.687 16.97 0 4.686-4.686 4.686-12.284 0-16.97-4.686-4.687-12.284-4.687-16.97 0-4.687 4.686-4.687 12.284 0 16.97zm35.74 7.705c0 6.627 5.37 12 12 12 6.626 0 12-5.373 12-12 0-6.628-5.374-12-12-12-6.63 0-12 5.372-12 12zm19.822 30.72c-4.686 4.686-4.686 12.284 0 16.97 4.687 4.686 12.285 4.686 16.97 0 4.687-4.686 4.687-12.284 0-16.97-4.685-4.687-12.283-4.687-16.97 0zm-7.704 35.74c-6.627 0-12 5.37-12 12 0 6.626 5.373 12 12 12s12-5.374 12-12c0-6.63-5.373-12-12-12zm-30.72 19.822c-4.686-4.686-12.284-4.686-16.97 0-4.686 4.687-4.686 12.285 0 16.97 4.686 4.687 12.284 4.687 16.97 0 4.687-4.685 4.687-12.283 0-16.97zm-35.74-7.704c0-6.627-5.372-12-12-12-6.626 0-12 5.373-12 12s5.374 12 12 12c6.628 0 12-5.373 12-12zm-19.823-30.72c4.687-4.686 4.687-12.284 0-16.97-4.686-4.686-12.284-4.686-16.97 0-4.687 4.686-4.687 12.284 0 16.97 4.686 4.687 12.284 4.687 16.97 0z\">\n                      <animateTransform\n                        attributeName=\"transform\"\n                        type=\"rotate\"\n                        from=\"0 67 67\"\n                        to=\"360 67 67\"\n                        dur=\"8s\"\n                        repeatCount=\"indefinite\"\n                      />\n                    </path>\n                  </svg>\n                ) : (\n                  'transferToken'\n                )}\n              </button>\n            </form>\n          </div>\n        </div>\n      ) : (\n        <Withdraw data={data} />\n      )}\n    </div>\n  )\n}\n\n// export async function addNetwork(id) {\n\n//     let networkData;\n\n//     switch (id) {\n\n//       //bsctestnet\n\n//       case 97:\n\n//         networkData = [\n\n//           {\n\n//             chainId: \"0x61\",\n\n//             chainName: \"BSCTESTNET\",\n\n//             rpcUrls: [\"https://data-seed-prebsc-1-s1.binance.org:8545\"],\n\n//             nativeCurrency: {\n\n//               name: \"BINANCE COIN\",\n\n//               symbol: \"BNB\",\n\n//               decimals: 18,\n\n//             },\n\n//             blockExplorerUrls: [\"https://testnet.bscscan.com/\"],\n\n//           },\n\n//         ];\n\n//         break;\n\n//       //bscmainet\n\n//       case 56:\n\n//         networkData = [\n\n//           {\n\n//             chainId: \"0x38\",\n\n//             chainName: \"BSCMAINET\",\n\n//             rpcUrls: [\"https://bsc-dataseed1.binance.org\"],\n\n//             nativeCurrency: {\n\n//               name: \"BINANCE COIN\",\n\n//               symbol: \"BNB\",\n\n//               decimals: 18,\n\n//             },\n\n//             blockExplorerUrls: [\"https://testnet.bscscan.com/\"],\n\n//           },\n\n//         ];\n\n//         break;\n\n//       default:\n\n//         break;\n\n//     }\n\n//     // agregar red o cambiar red\n\n//     return window.ethereum.request({\n\n//       method: \"wallet_addEthereumChain\",\n\n//       params: networkData,\n\n//     });\n\n//   }\n"]},"metadata":{},"sourceType":"module"}