{"ast":null,"code":"import _regeneratorRuntime from \"/home/dell/Desktop/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/dell/Desktop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/dell/Desktop/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/dell/Desktop/BlockChain/bridge/front-end/src/Components/Connect.js\";\n\nimport { useState } from 'react';\nimport Web3 from 'web3';\nexport var Connect = function Connect() {\n  console.log('FUNCTION CALLING 11');\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      account = _useState2[0],\n      setAccounts = _useState2[1];\n\n  var web3 = new Web3(Web3.givenProvider || 'localhost:8545');\n\n  var web3Connect = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var accounts, _network;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return web3.eth.getAccounts();\n\n            case 3:\n              accounts = _context.sent;\n              setAccounts(accounts[0]);\n              _context.next = 7;\n              return web3.eth.net.getNetworkType();\n\n            case 7:\n              _network = _context.sent;\n              // setNetwork(_network)\n              console.log(_network);\n              console.log('web3', account);\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 12]]);\n    }));\n\n    return function web3Connect() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  function onClickConnect() {\n    return _onClickConnect.apply(this, arguments);\n  }\n\n  function _onClickConnect() {\n    _onClickConnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _window, ethereum;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _window = window, ethereum = _window.ethereum;\n              _context2.prev = 1;\n              // Will open the MetaMask UI\n              // You should disable this button while the request is pending!\n              console.log('FUNCTION CALLING');\n              _context2.next = 5;\n              return ethereum.request({\n                method: 'eth_requestAccounts'\n              });\n\n            case 5:\n              _context2.next = 7;\n              return web3Connect();\n\n            case 7:\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.error(_context2.t0);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 9]]);\n    }));\n    return _onClickConnect.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }\n  });\n};","map":{"version":3,"sources":["/home/dell/Desktop/BlockChain/bridge/front-end/src/Components/Connect.js"],"names":["useState","Web3","Connect","console","log","account","setAccounts","web3","givenProvider","web3Connect","eth","getAccounts","accounts","net","getNetworkType","_network","error","onClickConnect","window","ethereum","request","method"],"mappings":";;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;;AAD2B,kBAGIJ,QAAQ,EAHZ;AAAA;AAAA,MAGpBK,OAHoB;AAAA,MAGXC,WAHW;;AAK3B,MAAMC,IAAI,GAAG,IAAIN,IAAJ,CAASA,IAAI,CAACO,aAAL,IAAsB,gBAA/B,CAAb;;AAEA,MAAMC,WAAW;AAAA,wEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGOF,IAAI,CAACG,GAAL,CAASC,WAAT,EAHP;;AAAA;AAGVC,cAAAA,QAHU;AAIhBN,cAAAA,WAAW,CAACM,QAAQ,CAAC,CAAD,CAAT,CAAX;AAJgB;AAAA,qBAKOL,IAAI,CAACG,GAAL,CAASG,GAAT,CAAaC,cAAb,EALP;;AAAA;AAKVC,cAAAA,QALU;AAMhB;AACAZ,cAAAA,OAAO,CAACC,GAAR,CAAYW,QAAZ;AAEAZ,cAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBC,OAApB;AATgB;AAAA;;AAAA;AAAA;AAAA;AAWhBF,cAAAA,OAAO,CAACa,KAAR;;AAXgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXP,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAP2B,WAsBZQ,cAtBY;AAAA;AAAA;;AAAA;AAAA,+EAsB3B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBACuBC,MADvB,EACUC,QADV,WACUA,QADV;AAAA;AAGI;AACA;AACAhB,cAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AALJ;AAAA,qBAOUe,QAAQ,CAACC,OAAT,CAAiB;AAAEC,gBAAAA,MAAM,EAAE;AAAV,eAAjB,CAPV;;AAAA;AAAA;AAAA,qBAQUZ,WAAW,EARrB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUIN,cAAAA,OAAO,CAACa,KAAR;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAtB2B;AAAA;AAAA;;AAmC3B,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CApCM","sourcesContent":["import { useState } from 'react'\n\nimport Web3 from 'web3'\n\nexport const Connect = () => {\n  console.log('FUNCTION CALLING 11')\n\n  const [account, setAccounts] = useState()\n\n  const web3 = new Web3(Web3.givenProvider || 'localhost:8545')\n\n  const web3Connect = async () => {\n    // console.log('FUNCTION CALLING')\n    try {\n      const accounts = await web3.eth.getAccounts()\n      setAccounts(accounts[0])\n      const _network = await web3.eth.net.getNetworkType()\n      // setNetwork(_network)\n      console.log(_network)\n\n      console.log('web3', account)\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  async function onClickConnect() {\n    const { ethereum } = window\n    try {\n      // Will open the MetaMask UI\n      // You should disable this button while the request is pending!\n      console.log('FUNCTION CALLING')\n\n      await ethereum.request({ method: 'eth_requestAccounts' })\n      await web3Connect()\n    } catch (error) {\n      console.error(error)\n    }\n  }\n  return <div></div>\n}\n"]},"metadata":{},"sourceType":"module"}