{"ast":null,"code":"import _regeneratorRuntime from \"/home/dell/Desktop/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/home/dell/Desktop/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/home/dell/Desktop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/dell/Desktop/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/dell/Desktop/BlockChain/bridge/front-end/src/Components/Withdraw.js\";\n\nimport { useState } from 'react';\nimport { BigNumber } from 'bignumber.js';\nimport Bridge from '../contracts/Bridge.json';\nimport { Connect } from './Connect';\nimport Web3 from 'web3';\nexport var Withdraw = function Withdraw(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      successful = _useState2[0],\n      setSuccessful = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      with_account = _useState4[0],\n      setWith_Account = _useState4[1];\n\n  var bridgeAbi = Bridge.abi; //   const connect = Connect()\n  //   const web3 = connect.web3\n\n  var web3 = new Web3(Web3.givenProvider || 'localhost:8545'); //   const bridgeContractEth = new web3.eth.Contract(\n  //     bridgeAbi,\n  //     '0x93C11Ea795519DD09175DA5a23f64b32a37Eff2E',\n  //   )\n\n  var bridgeContractBsc = new web3.eth.Contract(bridgeAbi, '0x1d6E5AD248dbdaEDd51C284b3Bd011e722126a4B');\n\n  var withdrawToken = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var _console;\n\n      var accounts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n\n              (_console = console).log.apply(_console, ['hello its working'].concat(_toConsumableArray(props.data.nonce)));\n\n              _context.next = 4;\n              return Connect.onClickConnect;\n\n            case 4:\n              _context.prev = 4;\n              _context.next = 7;\n              return web3.eth.getAccounts();\n\n            case 7:\n              accounts = _context.sent;\n              setWith_Account(accounts[0]);\n              _context.next = 11;\n              return bridgeContractBsc.methods.withDrawToken(new BigNumber(props.data.amount * Math.pow(10, 18)), props.data.nonce, props.data.messageHash, props.data.v, props.data.r, props.data.s).send({\n                from: with_account\n              });\n\n            case 11:\n              props.data.setLoading(false);\n              setSuccessful(true);\n              _context.next = 18;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](4);\n              console.error(_context.t0);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[4, 15]]);\n    }));\n\n    return function withdrawToken(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return successful === false ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"To withdraw your token on Bs. Select bsc network in metamask \"), \"amount\", /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, props.data.amount), \"user address \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 22\n    }\n  }, props.data.account)), props.data.input ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-warning\",\n    onClick: withdrawToken // disabled={props.data.tran_account === with_account ? false : true}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, props.loadings ? /*#__PURE__*/React.createElement(\"svg\", {\n    width: \"135\",\n    height: \"135\",\n    viewBox: \"0 0 135 135\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"#fff\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M67.447 58c5.523 0 10-4.477 10-10s-4.477-10-10-10-10 4.477-10 10 4.477 10 10 10zm9.448 9.447c0 5.523 4.477 10 10 10 5.522 0 10-4.477 10-10s-4.478-10-10-10c-5.523 0-10 4.477-10 10zm-9.448 9.448c-5.523 0-10 4.477-10 10 0 5.522 4.477 10 10 10s10-4.478 10-10c0-5.523-4.477-10-10-10zM58 67.447c0-5.523-4.477-10-10-10s-10 4.477-10 10 4.477 10 10 10 10-4.477 10-10z\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"animateTransform\", {\n    attributeName: \"transform\",\n    type: \"rotate\",\n    from: \"0 67 67\",\n    to: \"-360 67 67\",\n    dur: \"2.5s\",\n    repeatCount: \"indefinite\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M28.19 40.31c6.627 0 12-5.374 12-12 0-6.628-5.373-12-12-12-6.628 0-12 5.372-12 12 0 6.626 5.372 12 12 12zm30.72-19.825c4.686 4.687 12.284 4.687 16.97 0 4.686-4.686 4.686-12.284 0-16.97-4.686-4.687-12.284-4.687-16.97 0-4.687 4.686-4.687 12.284 0 16.97zm35.74 7.705c0 6.627 5.37 12 12 12 6.626 0 12-5.373 12-12 0-6.628-5.374-12-12-12-6.63 0-12 5.372-12 12zm19.822 30.72c-4.686 4.686-4.686 12.284 0 16.97 4.687 4.686 12.285 4.686 16.97 0 4.687-4.686 4.687-12.284 0-16.97-4.685-4.687-12.283-4.687-16.97 0zm-7.704 35.74c-6.627 0-12 5.37-12 12 0 6.626 5.373 12 12 12s12-5.374 12-12c0-6.63-5.373-12-12-12zm-30.72 19.822c-4.686-4.686-12.284-4.686-16.97 0-4.686 4.687-4.686 12.285 0 16.97 4.686 4.687 12.284 4.687 16.97 0 4.687-4.685 4.687-12.283 0-16.97zm-35.74-7.704c0-6.627-5.372-12-12-12-6.626 0-12 5.373-12 12s5.374 12 12 12c6.628 0 12-5.373 12-12zm-19.823-30.72c4.687-4.686 4.687-12.284 0-16.97-4.686-4.686-12.284-4.686-16.97 0-4.687 4.686-4.687 12.284 0 16.97 4.686 4.687 12.284 4.687 16.97 0z\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"animateTransform\", {\n    attributeName: \"transform\",\n    type: \"rotate\",\n    from: \"0 67 67\",\n    to: \"360 67 67\",\n    dur: \"8s\",\n    repeatCount: \"indefinite\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }))) : 'Withdraw Token') : /*#__PURE__*/React.createElement(React.Fragment, null)) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, \"transaction successful\"));\n}; // else if ((_network !== 'private', _network !== undefined)) {\n//   try {\n//     // console.log(v, r, s, signer, 'gggggggggggggggggggg')\n//     let accounts = await web3.eth.getAccounts()\n//     console.log(accounts)\n//     const results = await bridgeContractEth.methods\n//       .withDrawToken(\n//         new BigNumber(amount * 10 ** 18),\n//         nonce,\n//         messageHash,\n//         v,\n//         r,\n//         s,\n//         '0xa155D12C5AB84b9b8B6A1cC714cfE911e29f6D9b',\n//       )\n//       .send({ from: '0xa155D12C5AB84b9b8B6A1cC714cfE911e29f6D9b' })\n//     setSuccessful(true)\n//   } catch (error) {\n//     console.error(error)\n//   }\n// }\n// else {\n//   console.log(\n//     'please change network type to withdraw token on other chain ',\n//   )\n// }","map":{"version":3,"sources":["/home/dell/Desktop/BlockChain/bridge/front-end/src/Components/Withdraw.js"],"names":["useState","BigNumber","Bridge","Connect","Web3","Withdraw","props","successful","setSuccessful","with_account","setWith_Account","bridgeAbi","abi","web3","givenProvider","bridgeContractBsc","eth","Contract","withdrawToken","e","preventDefault","console","log","data","nonce","onClickConnect","getAccounts","accounts","methods","withDrawToken","amount","messageHash","v","r","s","send","from","setLoading","error","account","input","loadings"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { BigNumber } from 'bignumber.js'\nimport Bridge from '../contracts/Bridge.json'\nimport { Connect } from './Connect'\nimport Web3 from 'web3'\n\nexport const Withdraw = (props) => {\n  const [successful, setSuccessful] = useState(false)\n  const [with_account, setWith_Account] = useState()\n\n  const bridgeAbi = Bridge.abi\n  //   const connect = Connect()\n  //   const web3 = connect.web3\n  const web3 = new Web3(Web3.givenProvider || 'localhost:8545')\n  //   const bridgeContractEth = new web3.eth.Contract(\n  //     bridgeAbi,\n  //     '0x93C11Ea795519DD09175DA5a23f64b32a37Eff2E',\n  //   )\n  const bridgeContractBsc = new web3.eth.Contract(\n    bridgeAbi,\n    '0x1d6E5AD248dbdaEDd51C284b3Bd011e722126a4B',\n  )\n\n  const withdrawToken = async (e) => {\n    e.preventDefault()\n    console.log('hello its working', ...props.data.nonce)\n    await Connect.onClickConnect\n\n    // const _network = await web3.eth.net.getNetworkType()\n\n    try {\n      let accounts = await web3.eth.getAccounts()\n      setWith_Account(accounts[0])\n\n      await bridgeContractBsc.methods\n        .withDrawToken(\n          new BigNumber(props.data.amount * 10 ** 18),\n          props.data.nonce,\n          props.data.messageHash,\n          props.data.v,\n          props.data.r,\n          props.data.s,\n        )\n        .send({ from: with_account })\n      props.data.setLoading(false)\n\n      setSuccessful(true)\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return successful === false ? (\n    <div>\n      <div>\n        <h4>To withdraw your token on Bs. Select bsc network in metamask </h4>\n        amount\n        <p>{props.data.amount}</p>\n        user address <p>{props.data.account}</p>\n      </div>\n      {props.data.input ? (\n        <button\n          className=\"btn btn-warning\"\n          onClick={withdrawToken}\n          // disabled={props.data.tran_account === with_account ? false : true}\n        >\n          {props.loadings ? (\n            <svg\n              width=\"135\"\n              height=\"135\"\n              viewBox=\"0 0 135 135\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"#fff\"\n            >\n              <path d=\"M67.447 58c5.523 0 10-4.477 10-10s-4.477-10-10-10-10 4.477-10 10 4.477 10 10 10zm9.448 9.447c0 5.523 4.477 10 10 10 5.522 0 10-4.477 10-10s-4.478-10-10-10c-5.523 0-10 4.477-10 10zm-9.448 9.448c-5.523 0-10 4.477-10 10 0 5.522 4.477 10 10 10s10-4.478 10-10c0-5.523-4.477-10-10-10zM58 67.447c0-5.523-4.477-10-10-10s-10 4.477-10 10 4.477 10 10 10 10-4.477 10-10z\">\n                <animateTransform\n                  attributeName=\"transform\"\n                  type=\"rotate\"\n                  from=\"0 67 67\"\n                  to=\"-360 67 67\"\n                  dur=\"2.5s\"\n                  repeatCount=\"indefinite\"\n                />\n              </path>\n              <path d=\"M28.19 40.31c6.627 0 12-5.374 12-12 0-6.628-5.373-12-12-12-6.628 0-12 5.372-12 12 0 6.626 5.372 12 12 12zm30.72-19.825c4.686 4.687 12.284 4.687 16.97 0 4.686-4.686 4.686-12.284 0-16.97-4.686-4.687-12.284-4.687-16.97 0-4.687 4.686-4.687 12.284 0 16.97zm35.74 7.705c0 6.627 5.37 12 12 12 6.626 0 12-5.373 12-12 0-6.628-5.374-12-12-12-6.63 0-12 5.372-12 12zm19.822 30.72c-4.686 4.686-4.686 12.284 0 16.97 4.687 4.686 12.285 4.686 16.97 0 4.687-4.686 4.687-12.284 0-16.97-4.685-4.687-12.283-4.687-16.97 0zm-7.704 35.74c-6.627 0-12 5.37-12 12 0 6.626 5.373 12 12 12s12-5.374 12-12c0-6.63-5.373-12-12-12zm-30.72 19.822c-4.686-4.686-12.284-4.686-16.97 0-4.686 4.687-4.686 12.285 0 16.97 4.686 4.687 12.284 4.687 16.97 0 4.687-4.685 4.687-12.283 0-16.97zm-35.74-7.704c0-6.627-5.372-12-12-12-6.626 0-12 5.373-12 12s5.374 12 12 12c6.628 0 12-5.373 12-12zm-19.823-30.72c4.687-4.686 4.687-12.284 0-16.97-4.686-4.686-12.284-4.686-16.97 0-4.687 4.686-4.687 12.284 0 16.97 4.686 4.687 12.284 4.687 16.97 0z\">\n                <animateTransform\n                  attributeName=\"transform\"\n                  type=\"rotate\"\n                  from=\"0 67 67\"\n                  to=\"360 67 67\"\n                  dur=\"8s\"\n                  repeatCount=\"indefinite\"\n                />\n              </path>\n            </svg>\n          ) : (\n            'Withdraw Token'\n          )}\n        </button>\n      ) : (\n        <></>\n      )}\n    </div>\n  ) : (\n    <div>\n      <h1>transaction successful</h1>\n    </div>\n  )\n}\n// else if ((_network !== 'private', _network !== undefined)) {\n//   try {\n//     // console.log(v, r, s, signer, 'gggggggggggggggggggg')\n\n//     let accounts = await web3.eth.getAccounts()\n//     console.log(accounts)\n\n//     const results = await bridgeContractEth.methods\n//       .withDrawToken(\n//         new BigNumber(amount * 10 ** 18),\n//         nonce,\n//         messageHash,\n//         v,\n//         r,\n//         s,\n//         '0xa155D12C5AB84b9b8B6A1cC714cfE911e29f6D9b',\n//       )\n//       .send({ from: '0xa155D12C5AB84b9b8B6A1cC714cfE911e29f6D9b' })\n//     setSuccessful(true)\n//   } catch (error) {\n//     console.error(error)\n//   }\n// }\n// else {\n//   console.log(\n//     'please change network type to withdraw token on other chain ',\n//   )\n// }\n"]},"metadata":{},"sourceType":"module"}